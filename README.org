* Rust
   + emacs
    + racer
    + rust-mode
    + flycheck-rust
    + company-racer
  [[https://qiita.com/AoiMoe/items/a532bb0e554c8060103c][cargoのソースを読んでみよう - 第0回 : Rust環境の構築]]
  rustfmt は標準で (rustup updarte) 入るので入れなくてもいいみたい
* ドキュメント
  + [[https://doc.rust-lang.org/std/index.html][std - Rust]]
* 標準入力またはファイルから行を読みこむには?
  + [[https://stackoverflow.com/questions/30186037/how-can-i-read-a-single-line-from-stdin][rust - How can I read a single line from stdin? - Stack Overflow]]
  + [[https://www.reddit.com/r/rust/comments/32rjdd/reading_from_a_file_or_stdin_based_on_command/][Reading from a file or STDIN based on command line arguments. : rust]]

* Emacs 環境
  + Racer ::  https://github.com/racer-rust/emacs-racer
    + 入力補完
    + 定義にジャンプ
    + ライブラリのドキュメント表示

* COMMENT

    loop {
        match file.read_line(&mut line) {
            Ok(n) => {
                println!("read size: {}", n);
            }
            Err(e) => {
                eprintln!("{}", e);
            }
        }
        println!("line: '{}'", &line);
        parse_line(&line);
        line.clear();
    }

* db-sample
  | コマンド | 意味                            | 備考                       |
  |----------+---------------------------------+----------------------------|
  | %Q       | 終了(Quit)                      |                            |
  | %C       | 登録件数などの表示(Check)       |                            |
  | %P n     | 先頭からn件表示 (Print)         | n=0: 全件, n<0: 後ろ -n 件 |
  | %R file  | fileから読み込み(Read)          |                            |
  | %W file  | fileへ書き出し(Write)           |                            |
  | %F word  | wordを検索(Find)                | 結果を%Pと同じ形式で表示   |
  | %S n     | データをn番目の項目で整列(Sort) | 表示はしない               |
